pipeline{
    agent any

    tools {
        nodejs '16.17.0'
    }
    stages {
        
        stage('Clone Repo') {
            steps {
                echo "=== Cloning repo from git ==="
                checkout([$class: 'GitSCM', branches: [[name: '$BRANCH']], extensions: [], 
                userRemoteConfigs: [[credentialsId: 'cae45605-f700-42a2-a303-a228da8ed9ae', url: 'ssh://tfs.ssc-assurance.is.echonet:22/tfs/CARDIF%20CZ/Digital%20Factory/_git/cop-testing-postman-collection']]
                ])
            }
        }
        
        stage('Run Newman') { 
            steps {
                sh 'npm version' 
                sh '/usr/local/bin/newman -v'
                script{
                    report_file = "auto-testing/reports/genome-report-" + "$BUILD_NUMBER" + ".html"
                }
                
            sh 'cd genome/;/usr/local/bin/newman run "Genome Automation.postman_collection_1.1.json" -e Genome_' + "${params.test_env}"+'.postman_environment.json --reporters cli,htmlextra --reporter-htmlextra-export /apps/jenkins/workspace/auto-test/auto-test-1/reports/genome-report-23.html'
                archiveArtifacts artifacts: "/apps/jenkins/workspace/auto-test/auto-test-1/reports/genome-report-23.html", onlyIfSuccessful: true
            }
        }

        stage('Send email') {
            when { expression { params.send_email} }
            steps {
                emailext attachLog: true, attachmentsPattern: 'reports/*html', mimeType: 'text/html', subject: "Test", to: "yurturta@gmail.com", from: "yurturta@gmail.com", body: """Test"""
            }
        }
    }
}
